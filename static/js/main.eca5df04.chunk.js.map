{"version":3,"sources":["component/InputItem.js","component/InputItemData.js","CalculatorApp.js","index.js"],"names":["InputItem","props","className","placeholder","data","name","onChange","InputItemData","id","CalculatorApp","state","firstVal","secondVal","updateInputValue","evt","target","value","setState","parseFloat","add","alert","substract","multiplication","division","inputComponent","map","input","this","sum","numbersAreNull","isNumbersNaN","isNaN","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAceA,EAZG,SAACC,GACjB,OACE,qBAAKC,UAAU,WAAf,SACE,uBACEC,YAAaF,EAAMG,KAAKD,YACxBE,KAAMJ,EAAMG,KAAKC,KACjBC,SAAUL,EAAMG,KAAKE,cCKdC,EAbO,CACpB,CACEC,GAAI,EACJL,YAAa,cACbE,KAAM,YAER,CACEG,GAAI,EACJL,YAAa,eACbE,KAAM,cCmHKI,E,4MArHbC,MAAQ,CACNC,SAAU,EACVC,UAAW,G,EAGbC,iBAAmB,SAACC,GAAS,IAAD,EACFA,EAAIC,OAApBV,EADkB,EAClBA,KAAMW,EADY,EACZA,MACd,EAAKC,SAAL,eACGZ,EAAOa,WAAWF,M,EAIvBG,IAAM,WAAO,IAAD,EACsB,EAAKT,MAA7BC,EADE,EACFA,SAAUC,EADR,EACQA,UAClBQ,MAAM,eAAiBT,EAAWC,K,EAGpCS,UAAY,WAAO,IAAD,EACgB,EAAKX,MAA7BC,EADQ,EACRA,SAAUC,EADF,EACEA,UAClBQ,MAAM,eAAiBT,EAAWC,K,EAEpCU,eAAiB,WAAO,IAAD,EACW,EAAKZ,MAA7BC,EADa,EACbA,SAAUC,EADG,EACHA,UAClBQ,MAAM,aAAeT,EAAWC,I,EAGlCW,SAAW,WAAO,IAAD,EACiB,EAAKb,MAA7BC,EADO,EACPA,SAAUC,EADH,EACGA,UAClBQ,MAAM,aAAeT,EAAWC,I,uDAGxB,IAiBJW,EAjBG,OACDC,EAAiBjB,EAAckB,KAAI,SAACC,GAAD,OACvC,cAAC,EAAD,CACEtB,KAAM,CACJD,YAAauB,EAAMvB,YACnBE,KAAMqB,EAAMrB,KACZC,SAAU,SAACQ,GAAD,OAAS,EAAKD,iBAAiBC,UANxC,EAUyBa,KAAKjB,MAA7BC,EAVD,EAUCA,SAAUC,EAVX,EAUWA,UAEZgB,EAAMjB,EAAWC,EACjBS,EAAYV,EAAWC,EACvBU,EAAiBX,EAAWC,EAE5BiB,EAA8B,IAAblB,GAAgC,IAAdC,EAGnCkB,EAAeC,MAAMpB,IAAaoB,MAAMnB,GAO9C,OAJEW,EADe,IAAbZ,GAAgC,IAAdC,EACT,EAEAD,EAAWC,EAGtB,gCACGY,EAkBD,wBAAQQ,QAASL,KAAKR,IAAtB,eACA,wBAAQa,QAASL,KAAKN,UAAtB,eACA,wBAAQW,QAASL,KAAKL,eAAtB,eACA,wBAAQU,QAASL,KAAKJ,SAAtB,eACA,uBACA,uBACEO,EAsBA,wCACO,uBACL,uBAFF,eAEoB,uBAClB,uBAHF,oBAGyB,uBACvB,uBAJF,cAImB,0BAzBnB,wCACQH,KAAKjB,MAAMC,SADnB,MACgCgB,KAAKjB,MAAME,UAD3C,MACyDgB,EADzD,IAC8D,uBAC5D,uBAFF,cAGcD,KAAKjB,MAAMC,SAHzB,MAGsCgB,KAAKjB,MAAME,UAHjD,KAG8D,IAC3DS,EACD,uBACA,uBANF,mBAOmBM,KAAKjB,MAAMC,SAP9B,MAO2CgB,KAAKjB,MAAME,UAPtD,KAOmE,IAChEU,EACD,uBACA,uBACEO,EAMA,4CALA,6CACaF,KAAKjB,MAAMC,SADxB,MACqCgB,KAAKjB,MAAME,UADhD,KAC6D,IAC1DW,e,GAnGWU,IAAMC,WCDlCC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.eca5df04.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputItem = (props) => {\r\n  return (\r\n    <div className=\"d-inline\">\r\n      <input\r\n        placeholder={props.data.placeholder}\r\n        name={props.data.name}\r\n        onChange={props.data.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputItem;\r\n","const InputItemData = [\r\n  {\r\n    id: 1,\r\n    placeholder: \"first value\",\r\n    name: \"firstVal\",\r\n  },\r\n  {\r\n    id: 2,\r\n    placeholder: \"second value\",\r\n    name: \"secondVal\",\r\n  },\r\n];\r\n\r\nexport default InputItemData;\r\n","import React from \"react\";\r\nimport InputItem from \"./component/InputItem\";\r\nimport InputItemData from \"./component/InputItemData\";\r\n\r\n// import ResultComponent from './ResultComponent';\r\n\r\nclass CalculatorApp extends React.Component {\r\n  state = {\r\n    firstVal: 0,\r\n    secondVal: 0,\r\n  };\r\n\r\n  updateInputValue = (evt) => {\r\n    const { name, value } = evt.target;\r\n    this.setState({\r\n      [name]: parseFloat(value),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { firstVal, secondVal } = this.state;\r\n    alert(\"The SUM is \" + (firstVal + secondVal));\r\n  };\r\n\r\n  substract = () => {\r\n    const { firstVal, secondVal } = this.state;\r\n    alert(\"The DIF is \" + (firstVal - secondVal));\r\n  };\r\n  multiplication = () => {\r\n    const { firstVal, secondVal } = this.state;\r\n    alert(\"Result is \" + firstVal * secondVal);\r\n  };\r\n\r\n  division = () => {\r\n    const { firstVal, secondVal } = this.state;\r\n    alert(\"Result is \" + firstVal / secondVal);\r\n  };\r\n\r\n  render() {\r\n    const inputComponent = InputItemData.map((input) => (\r\n      <InputItem\r\n        data={{\r\n          placeholder: input.placeholder,\r\n          name: input.name,\r\n          onChange: (evt) => this.updateInputValue(evt),\r\n        }}\r\n      />\r\n    ));\r\n    const { firstVal, secondVal } = this.state;\r\n\r\n    const sum = firstVal + secondVal;\r\n    const substract = firstVal - secondVal;\r\n    const multiplication = firstVal * secondVal;\r\n\r\n    const numbersAreNull = firstVal === 0 || secondVal === 0;\r\n    let division;\r\n\r\n    const isNumbersNaN = isNaN(firstVal) || isNaN(secondVal);\r\n\r\n    if (firstVal === 0 || secondVal === 0) {\r\n      division = 0;\r\n    } else {\r\n      division = firstVal / secondVal;\r\n    }\r\n    return (\r\n      <div>\r\n        {inputComponent}\r\n        {/* <InputItem\r\n          data={{\r\n            placeholder: \"first value\",\r\n            name: \"firstVal\",\r\n            onChange: (evt) => this.updateInputValue(evt),\r\n          }}\r\n        /> */}\r\n        {/* <input\r\n          placeholder=\"first value\"\r\n          name=\"firstVal\"\r\n          onChange={(evt) => this.updateInputValue(evt)}\r\n        />\r\n        <input\r\n          placeholder=\"second value\"\r\n          name=\"secondVal\"\r\n          onChange={(evt) => this.updateInputValue(evt)}\r\n        /> */}\r\n        <button onClick={this.add}>+</button>\r\n        <button onClick={this.substract}>-</button>\r\n        <button onClick={this.multiplication}>*</button>\r\n        <button onClick={this.division}>/</button>\r\n        <br />\r\n        <br />\r\n        {!isNumbersNaN ? (\r\n          <div>\r\n            Sum: {this.state.firstVal} + {this.state.secondVal} = {sum} <br />\r\n            <br />\r\n            Substract: {this.state.firstVal} - {this.state.secondVal} ={\" \"}\r\n            {substract}\r\n            <br />\r\n            <br />\r\n            Multiplictaion: {this.state.firstVal} * {this.state.secondVal} ={\" \"}\r\n            {multiplication}\r\n            <br />\r\n            <br />\r\n            {!numbersAreNull ? (\r\n              <div>\r\n                Division: {this.state.firstVal} / {this.state.secondVal} ={\" \"}\r\n                {division}\r\n              </div>\r\n            ) : (\r\n              <div>Division:</div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            Sum: <br />\r\n            <br /> Substract: <br />\r\n            <br /> Multiplictaion: <br />\r\n            <br /> Division: <br />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalculatorApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport CalculatorApp from \"./CalculatorApp\";\n\nReactDOM.render(<CalculatorApp />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}